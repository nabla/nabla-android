// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.buildConfig = [
            'compileSdk': 32,
            'minSdk'    : 23,
            'targetSdk' : 32,
            'jvmTarget' : JavaVersion.VERSION_11,
            'groupId'   : 'com.nabla.sdk',
    ]

    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }

    dependencies {
        classpath libs.android.pluginGradle
        classpath libs.kotlin.pluginGradle
        classpath libs.kotlin.serialization.pluginGradle
        classpath libs.apollo.pluginGradle
        classpath libs.ktlint.pluginGradle
        classpath libs.kotlin.binaryCompatibilityValidator.pluginGradle
        classpath libs.gradle.dependencyAnalysis.pluginGradle
        classpath libs.paparazzi.pluginGradle
    }
}

// binary-compatibility-validator configuration
apply plugin: 'org.jetbrains.kotlinx.binary-compatibility-validator'

apiValidation {
    ignoredProjects += ["demo", "messaging-ui-tests", "messaging-core-test-fixtures", "core-test-fixtures"]
}

// dependencies-analysis configuration
// run './gradlew buildHealth' to check the whole project dependencies
apply plugin: 'com.autonomousapps.dependency-analysis'

dependencyAnalysis {
    issues {
        all {
            onAny {
                severity('fail')
            }
            onUsedTransitiveDependencies {
                severity('ignore')
            }
            ignoreKtx(true)
        }
    }
    dependencies {
        bundle("apollo-normalized-cache-sqlite") {
            includeGroup("com.apollographql.apollo3")
        }
        bundle("robolectric") {
            includeGroup("org.robolectric")
        }
        bundle("exoplayer") {
            includeGroup("com.google.android.exoplayer")
        }
    }
}

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    ktlint {
        setVersion(libs.versions.ktlint.get())
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            allWarningsAsErrors = true
            jvmTarget = buildConfig.jvmTarget
            freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}