plugins {
    id 'conventions.android-library'
    id 'com.apollographql.apollo3'
}

android {
    namespace = 'com.nabla.sdk.core'

    defaultConfig {
        buildConfigField 'String', 'VERSION_NAME', "\"${getGitDescribe()}\""
        buildConfigField 'int', 'API_VERSION', getSdkApiVersion()
    }
}

String getGitDescribe() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--always'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

String getSdkApiVersion() {
    def jsonFile = file('versions.json')
    def parsedJson = new groovy.json.JsonSlurper().parseText(jsonFile.text)

    return parsedJson.code_version
}

apollo {
    // This service needs to be named "service" for "generateApolloMetadata" to work correctly
    // See https://github.com/apollographql/apollo-kotlin/issues/4334
    service("service") {
        packageName.set("com.nabla.sdk.graphql")
        mapScalar("UUID", "com.benasher44.uuid.Uuid", "com.nabla.sdk.core.data.apollo.adapter.uuidAdapter")
        mapScalar("TimeZone", "kotlinx.datetime.TimeZone", "com.nabla.sdk.core.data.apollo.adapter.timeZoneAdapter")
        mapScalar("DateTime", "kotlinx.datetime.Instant", "com.apollographql.apollo3.adapter.KotlinxInstantAdapter")
        generateApolloMetadata.set(true)
        alwaysGenerateTypesMatching.set(["OpaqueCursorPage", "Query", "Subscription", "Mutation", "SubscriptionReadinessEvent"])
    }
    // purpose: https://github.com/nabla/health/pull/21296#discussion_r942216224
    service("internal") {
        srcDir("src/main/graphqlinternal")
        schemaFile.set(file("src/main/graphql/com/nabla/sdk/core/schema.graphqls"))
        mapScalar("UUID", "com.benasher44.uuid.Uuid", "com.nabla.sdk.core.data.apollo.adapter.uuidAdapter")
        mapScalar("DateTime", "kotlinx.datetime.Instant", "com.apollographql.apollo3.adapter.KotlinxInstantAdapter")
        packageName.set("com.nabla.sdk.core.graphql")
        generateAsInternal.set(true)
    }
}

dependencies {
    api libs.kotlin.datetime
    api libs.uuid
    api libs.okhttp
    api libs.androidx.appcompat

    implementation libs.okhttp.logging
    implementation libs.retrofit
    implementation libs.retrofit.kotlin.serialization
    implementation libs.jwtdecode
    implementation libs.apollo.runtime
    implementation libs.apollo.cache
    implementation libs.apollo.cache.sqlite
    implementation libs.apollo.adapters
    implementation libs.coilCore
    implementation libs.androidx.startup
    implementation libs.androidx.core.ktx
    implementation libs.androidx.fragment.ktx
    implementation libs.google.material
    implementation libs.kotlin.serialization.json
    implementation libs.kotlin.coroutines.core

    compileOnly libs.androidx.annotation

    testImplementation project(':core-test-fixtures')
    testImplementation project(':tests-common')
    testImplementation libs.turbine
    testImplementation libs.junit
    testImplementation libs.kotlin.test
    testImplementation libs.mockk
}
